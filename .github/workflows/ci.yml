name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.*'
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Install static analyzers
        run: sudo apt-get install clang-tidy cppcheck -y -q

      - name: Configure
        shell: pwsh
        run: cmake --preset=ci-lint

      - name: Build
        run: cmake --build build

      - name: Check header formatting
        uses: jidicula/clang-format-action@v4.6.2
        with:
          clang-format-version: '14'
          check-path: 'include/perturb'

      - name: Check source formatting
        uses: jidicula/clang-format-action@v4.6.2
        with:
          clang-format-version: '14'
          check-path: 'src'

  examples:
    name: Examples
    needs: [ lint ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Configure local example
        working-directory: examples/cmake-local
        run: cmake -S . -B build

      - name: Build local example
        working-directory: examples/cmake-local
        run: cmake --build build

      - name: Run local example
        working-directory: examples/cmake-local/build
        run: ./VeryCoolProject

      - name: Configure fetch-content example
        working-directory: examples/cmake-fetch-content
        run: cmake -S . -B build

      - name: Build fetch-content example
        working-directory: examples/cmake-fetch-content
        run: cmake --build build

      - name: Run fetch-content example
        working-directory: examples/cmake-fetch-content/build
        run: ./VeryCoolProject

  test:
    name: Test
    needs: [ examples ]

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-2022 ]
        disable_io: [ OFF ]
        include:
          - os: ubuntu-latest
            disable_io: ON

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Configure
        shell: pwsh
        run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])" -Dperturb_DISABLE_IO=${{ matrix.disable_io }}

      - name: Build
        run: cmake --build build --config Release

      - name: Install
        run: cmake --install build --config Release --prefix prefix

      - name: Test
        working-directory: build
        run: ctest --output-on-failure -C Release

  docs:
    name: Docs
    needs: [ examples, test ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build docs with Doxygen
        uses: mattnotmitt/doxygen-action@1.9.3
        with:
          working-directory: docs

      - name: Deploy docs to Github pages
        if: github.ref == 'refs/heads/master'
          && github.event_name == 'push'
          && github.repository_owner == 'gunvirranu'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/html
